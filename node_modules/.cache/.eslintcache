[{"/Users/alenamikituk/Documents/IT/weather/src/index.js":"1","/Users/alenamikituk/Documents/IT/weather/src/App.js":"2","/Users/alenamikituk/Documents/IT/weather/src/redux/store.js":"3","/Users/alenamikituk/Documents/IT/weather/src/pages/MainPage.js":"4","/Users/alenamikituk/Documents/IT/weather/src/redux/slices/countriesSlice.js":"5","/Users/alenamikituk/Documents/IT/weather/src/redux/slices/weatherSlice.js":"6","/Users/alenamikituk/Documents/IT/weather/src/redux/weather/weatherSelectors.js":"7","/Users/alenamikituk/Documents/IT/weather/src/redux/countries/countriesSelectors.js":"8"},{"size":607,"mtime":1650658891479,"results":"9","hashOfConfig":"10"},{"size":396,"mtime":1650795027282,"results":"11","hashOfConfig":"10"},{"size":911,"mtime":1650658891480,"results":"12","hashOfConfig":"10"},{"size":3461,"mtime":1650876084075,"results":"13","hashOfConfig":"10"},{"size":3040,"mtime":1650876118608,"results":"14","hashOfConfig":"10"},{"size":1230,"mtime":1650870254190,"results":"15","hashOfConfig":"10"},{"size":66,"mtime":1650658891480,"results":"16","hashOfConfig":"10"},{"size":57,"mtime":1650658891479,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sq7da8",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alenamikituk/Documents/IT/weather/src/index.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/App.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/redux/store.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/pages/MainPage.js",["44","45","46","47"],[],"/Users/alenamikituk/Documents/IT/weather/src/redux/slices/countriesSlice.js",["48","49","50","51"],[],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { getCountries } from \"../countries/countriesSelectors\";\n// axios.defaults.baseURL = 'https://api.openweathermap.org/data/2.5';\n\n// const updateElById = (arr, idx, updateData) => arr.map((item, id, arr) => arr.indexOf(item) === idx ? updateData : item)\n\nconst deleteCity = (arr, name) => {\n  console.log(arr, name)\n  return arr.filter((el) => name !== el)\n}\n\n// export const updateWeatherAction = createAsyncThunk(\n//   \"weather/updateWeather\",\n//     async (payload, { rejectWithValue, getState, dispatch }) => {\n//         const { lat, lon, idx } = payload;\n//         try {\n//           const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=d0aef4da9ac1a34e09e4ce9ff137ae24&units=imperial`);\n//           return {data, idx}\n//       } catch (error) {\n//       if (!error?.response) {\n//         throw error;\n//       }\n//       return rejectWithValue(error?.response?.data);\n//     }\n//   }\n// );\n\nconst countriesSlice = createSlice({\n    name: 'countries',\n    initialState: {\n        arr: [],\n        error: null,\n        loading:false\n    },\n    reducers: {\n        addCountry: (state, { payload }) => {\n          state.arr = !state.arr.includes(payload) ? [...state.arr, payload] : state.arr\n        },\n        removeCountry: (state, { payload }) => {\n          state.arr = [...deleteCity(state.arr, payload)]\n        },\n        // updateCountry: (state, {payload}) => {state.arr = updateElById(state.arr, payload.idx, payload.data)}\n        \n    },\n    extraReducers: {\n          // [updateWeatherAction.pending]: (state, action) => {\n          //   state.loading = true;\n          //   },\n          // [updateWeatherAction.fulfilled]: (state, { payload }) => {\n          //   state.arr = updateElById(state.arr, payload.idx, payload.data)\n          //   },\n        //     .addCase(updateWeatherAction.fulfilled, (state, {payload}) => {\n        //             state.loading = false,\n        //             state.error = null\n        //         }\n        // )\n        //     .addCase(updateWeatherAction.fulfilled, (state, action) => {\n        //         const findIndex = state.arr.reduce((acc, country, index) => \n        //             if (country.name === action.payload.name) {\n        //                 return acc += index\n        //             }\n        //             return acc;\n        //         }, 0)\n        //         return {\n        //             state.arr[findIndex] = action.payload,\n        //             state.loading = false,\n        //             state.error = null\n        //         }\n        //     }\n        // )\n        // [updateWeatherAction.rejected]: (state, action) => {\n        //     state.error = action?.payload;\n        //     state.loading = false;\n        //     }\n          }  \n})\n\n\nexport const { addCountry,removeCountry } = countriesSlice.actions;\nexport default countriesSlice.reducer;","/Users/alenamikituk/Documents/IT/weather/src/redux/slices/weatherSlice.js",[],[],[],"/Users/alenamikituk/Documents/IT/weather/src/redux/weather/weatherSelectors.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/redux/countries/countriesSelectors.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":2,"column":16,"nodeType":"54","messageId":"55","endLine":2,"endColumn":21},{"ruleId":"52","severity":1,"message":"56","line":2,"column":23,"nodeType":"54","messageId":"55","endLine":2,"endColumn":29},{"ruleId":"57","severity":1,"message":"58","line":50,"column":8,"nodeType":"59","endLine":50,"endColumn":19,"suggestions":"60"},{"ruleId":"52","severity":1,"message":"61","line":65,"column":22,"nodeType":"54","messageId":"55","endLine":65,"endColumn":29},{"ruleId":"52","severity":1,"message":"62","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"63","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":13},{"ruleId":"52","severity":1,"message":"64","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":21},{"ruleId":"52","severity":1,"message":"65","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":22},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cities'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'loading' is assigned a value but never used.","'createAsyncThunk' is defined but never used.","'axios' is defined but never used.","'useSelector' is defined but never used.","'getCountries' is defined but never used.",{"desc":"67","fix":"68"},"Update the dependencies array to be: [cities, countries]",{"range":"69","text":"70"},[1594,1605],"[cities, countries]"]