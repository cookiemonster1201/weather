[{"/Users/alenamikituk/Documents/IT/weather/src/index.js":"1","/Users/alenamikituk/Documents/IT/weather/src/App.js":"2","/Users/alenamikituk/Documents/IT/weather/src/redux/store.js":"3","/Users/alenamikituk/Documents/IT/weather/src/pages/MainPage.js":"4","/Users/alenamikituk/Documents/IT/weather/src/redux/slices/countriesSlice.js":"5","/Users/alenamikituk/Documents/IT/weather/src/redux/slices/weatherSlice.js":"6","/Users/alenamikituk/Documents/IT/weather/src/redux/weather/weatherSelectors.js":"7","/Users/alenamikituk/Documents/IT/weather/src/redux/countries/countriesSelectors.js":"8"},{"size":607,"mtime":1650658891479,"results":"9","hashOfConfig":"10"},{"size":396,"mtime":1650795027282,"results":"11","hashOfConfig":"10"},{"size":911,"mtime":1650658891480,"results":"12","hashOfConfig":"10"},{"size":3700,"mtime":1650879645594,"results":"13","hashOfConfig":"10"},{"size":781,"mtime":1650876234716,"results":"14","hashOfConfig":"10"},{"size":1230,"mtime":1650870254190,"results":"15","hashOfConfig":"10"},{"size":66,"mtime":1650658891480,"results":"16","hashOfConfig":"10"},{"size":57,"mtime":1650658891479,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sq7da8",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alenamikituk/Documents/IT/weather/src/index.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/App.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/redux/store.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/pages/MainPage.js",["44","45","46","47"],[],"import React, { useState,useEffect } from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fetchWeatherAction } from '../redux/slices/weatherSlice';\nimport { getSearchedWeather } from '../redux/weather/weatherSelectors';\nimport { getCountries } from '../redux/countries/countriesSelectors';\nimport { addCountry,removeCountry } from '../redux/slices/countriesSlice';\nimport axios from 'axios';\n\n\nexport default function MainPage() {\n    const dispatch = useDispatch();\n    const searchCountry = useSelector(getSearchedWeather)\n    const countries = useSelector(getCountries);\n    const [city, setCity] = useState('');\n    const [cities, setCities] = useState([]);\n\n    const onHandleChange = (e) => {\n      setCity(e.target.value)\n    }\n\n    const onHandleSearch = () => {\n      dispatch(fetchWeatherAction(city))\n      setCity('')\n    }\n\n    useEffect(() => {\n      const newCities = [];\n      for (let i = 0; i < countries.length; i++) {\n        cities.forEach(city => {\n          if (city.name === countries[i]) {\n            newCities.push(city)\n          }\n        })\n      }\n\n      setCities(newCities)\n      \n      countries?.forEach((country) => {\n          axios.get(`/weather?q=${country}&appid=d0aef4da9ac1a34e09e4ce9ff137ae24&units=imperial`).then(({data}) => {\n            setCities(pr => {\n              console.log('pr', pr)\n              if (pr && pr?.find(c => c.name === country)) {\n                return pr\n              }\n              console.log('lllll')\n            return [...pr, data]\n          });\n      })\n    })\n    console.log('cities', cities)\n    }, [countries]);\n\n    async function updateCity({lat, lon, name}) {\n      const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=d0aef4da9ac1a34e09e4ce9ff137ae24&units=imperial`);\n      setCities(prev => {\n        return prev.map(city => {\n          if (city.name === name) {\n            return data;\n          } else {\n            return city;\n          }\n        })\n      })\n    }\n\n    const { weather, loading } = searchCountry;\n\n    const sortedCities = [];\n    if (countries.length === cities.length) {\n      countries.forEach(c => {\n        sortedCities.push(cities.find(({name}) => name === c))\n      }) \n    }\n    \n      return (\n          <>\n            <h1>\n          Hello world\n            </h1>\n            <input placeholder='Enter city' value={city} onChange={onHandleChange} />\n        <button onClick={onHandleSearch}>Search</button>\n          {weather ? (\n        <div style={{margin:'0 auto', background:'grey', width:'150px'}}>\n          <p>{weather.name}</p>\n          <p>{weather.id}</p>\n          <p>{weather.dt}</p>\n          <button onClick={()=>dispatch(addCountry(weather.name))}>add to your countries</button>\n        </div>\n      ) :\n        (<h2>make a search</h2>)}\n      <h3>Your favourites countries</h3>\n      {sortedCities.length > 0 ? (\n        <ul style={{display:'flex', flexWrap:'wrap', margin:'0 auto'}}>\n          {sortedCities.map((c) => (\n            <li style={{ border: '1px solid black',cursor:'pointer' }} key={uuidv4()}><p>{c.name}</p>\n                  <p>{c.dt}</p>\n                  <div>\n                      <Link to={`/details/${c.name}`}>Details</Link>\n                  </div>\n                  <button onClick={() => dispatch(removeCountry(c.name))}>remove</button>\n                  <button onClick={() => updateCity({ lon: c.coord.lon, lat: c.coord.lat, name: c.name })\n                  }>update</button>\n            </li>))}\n      </ul>\n          ):(<h4>No favourites HERE</h4>)}\n</>)\n}\n","/Users/alenamikituk/Documents/IT/weather/src/redux/slices/countriesSlice.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/redux/slices/weatherSlice.js",[],[],[],"/Users/alenamikituk/Documents/IT/weather/src/redux/weather/weatherSelectors.js",[],[],"/Users/alenamikituk/Documents/IT/weather/src/redux/countries/countriesSelectors.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":16,"nodeType":"50","messageId":"51","endLine":2,"endColumn":21},{"ruleId":"48","severity":1,"message":"52","line":2,"column":23,"nodeType":"50","messageId":"51","endLine":2,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":53,"column":8,"nodeType":"55","endLine":53,"endColumn":19,"suggestions":"56"},{"ruleId":"48","severity":1,"message":"57","line":68,"column":22,"nodeType":"50","messageId":"51","endLine":68,"endColumn":29},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cities'. Either include it or remove the dependency array.","ArrayExpression",["58"],"'loading' is assigned a value but never used.",{"desc":"59","fix":"60"},"Update the dependencies array to be: [cities, countries]",{"range":"61","text":"62"},[1699,1710],"[cities, countries]"]