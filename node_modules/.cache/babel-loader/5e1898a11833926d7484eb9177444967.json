{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport countriesReducer from './slices/countriesSlice';\nimport weatherReducer from './slices/weatherSlice';\nconst persistConfig = {\n  key: 'countries',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, countriesReducer);\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n})];\nexport const store = configureStore({\n  reducer: {\n    searchedWeather: weatherReducer,\n    countries: persistedReducer\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\"\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/alenamikituk/Documents/IT/weather/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","countriesReducer","weatherReducer","persistConfig","key","persistedReducer","middleware","serializableCheck","ignoredActions","store","reducer","searchedWeather","countries","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,WADe;AAEpBJ,EAAAA;AAFoB,CAAtB;AAIA,MAAMK,gBAAgB,GAAGZ,cAAc,CAACU,aAAD,EAAgBF,gBAAhB,CAAvC;AACA,MAAMK,UAAU,GAAG,CACjB,GAAGf,oBAAoB,CAAC;AACtBgB,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACd,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,CAAnB;AAQA,OAAO,MAAMU,KAAK,GAAGnB,cAAc,CAAC;AAChCoB,EAAAA,OAAO,EAAE;AACLC,IAAAA,eAAe,EAACT,cADX;AAELU,IAAAA,SAAS,EAACP;AAFL,GADuB;AAKlCC,EAAAA,UALkC;AAMlCO,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAND,CAAD,CAA5B;AASP,OAAO,MAAMC,SAAS,GAAGzB,YAAY,CAACiB,KAAD,CAA9B","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport countriesReducer from './slices/countriesSlice'; \nimport weatherReducer from './slices/weatherSlice';\nconst persistConfig = { \n  key: 'countries', \n  storage, \n}\nconst persistedReducer = persistReducer(persistConfig, countriesReducer);\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n    reducer: {\n        searchedWeather:weatherReducer,\n        countries:persistedReducer\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}