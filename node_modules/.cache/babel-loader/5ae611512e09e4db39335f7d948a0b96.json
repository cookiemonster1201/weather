{"ast":null,"code":"var _jsxFileName = \"/Users/alenamikituk/Documents/IT/weather/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fetchWeatherAction } from '../redux/slices/weatherSlice';\nimport { getSearchedWeather } from '../redux/weather/weatherSelectors';\nimport { getCountries } from '../redux/countries/countriesSelectors';\nimport { addCountry, removeCountry, updateWeatherAction } from '../redux/slices/countriesSlice';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const searchCountry = useSelector(getSearchedWeather);\n  const countries = useSelector(getCountries);\n  const [city, setCity] = useState('');\n  const [cities, setCities] = useState([]);\n\n  const onHandleChange = e => {\n    setCity(e.target.value);\n  };\n\n  const onHandleSearch = () => {\n    dispatch(fetchWeatherAction(city));\n    setCity('');\n  }; // async function getCitiesData(arr, callcack) {\n  // }\n\n\n  useEffect(() => {\n    const f = [];\n    countries === null || countries === void 0 ? void 0 : countries.forEach(async country => {\n      const {\n        data\n      } = await axios.get(`/weather?q=${country}&appid=7318f9d16165f2ed696d529c2a4bcc86&units=imperial`);\n      f.push(data);\n    });\n    setCities(f);\n  }, [countries]);\n  console.log('cities', cities);\n  const {\n    weather,\n    loading\n  } = searchCountry;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log('cities', cities), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter city\",\n      value: city,\n      onChange: onHandleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onHandleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '0 auto',\n        background: 'grey',\n        width: '150px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.dt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(addCountry(weather.name)),\n        children: \"add to your countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"make a search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your favourites countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), cities.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: '0 auto'\n      },\n      children: cities.map((c, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          border: '1px solid black',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: c.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 87\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: console.log('c.id', c.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: c.dt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/details/${c.name}`,\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(removeCountry(c.name)),\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            dispatch(updateWeatherAction({\n              lon: c.coord.lon,\n              lat: c.coord.lat,\n              idx: idx\n            }));\n          },\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this)]\n      }, uuidv4(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No favourites HERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainPage, \"JUhj468inlpvHtAn75zHcwBLvGc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/alenamikituk/Documents/IT/weather/src/pages/MainPage.js"],"names":["React","useState","useEffect","Link","Route","Routes","useDispatch","useSelector","v4","uuidv4","fetchWeatherAction","getSearchedWeather","getCountries","addCountry","removeCountry","updateWeatherAction","axios","MainPage","dispatch","searchCountry","countries","city","setCity","cities","setCities","onHandleChange","e","target","value","onHandleSearch","f","forEach","country","data","get","push","console","log","weather","loading","margin","background","width","name","id","dt","length","display","flexWrap","map","c","idx","border","cursor","lon","coord","lat"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fetchWeatherAction } from '../redux/slices/weatherSlice';\nimport { getSearchedWeather } from '../redux/weather/weatherSelectors';\nimport { getCountries } from '../redux/countries/countriesSelectors';\nimport { addCountry,removeCountry, updateWeatherAction } from '../redux/slices/countriesSlice';\nimport axios from 'axios';\n\n\nexport default function MainPage() {\n    const dispatch = useDispatch();\n    const searchCountry = useSelector(getSearchedWeather)\n    const countries = useSelector(getCountries);\n    const [city, setCity] = useState('');\n\n    const [cities, setCities] = useState([]);\n\n    const onHandleChange = (e) => {\n      setCity(e.target.value)\n    }\n\n    const onHandleSearch = () => {\n      dispatch(fetchWeatherAction(city))\n      setCity('')\n    }\n\n    // async function getCitiesData(arr, callcack) {\n\n    // }\n    useEffect(() => {\n      const f = []\n      countries?.forEach(async (country) => {\n          const { data } = await axios.get(`/weather?q=${country}&appid=7318f9d16165f2ed696d529c2a4bcc86&units=imperial`);\n          f.push(data)\n      })\n      setCities(f)\n    }, [countries]);\n\n    console.log('cities', cities)\n\n    const { weather, loading } = searchCountry;\n\n      return (\n          <>\n          {console.log('cities', cities)}\n            <h1>\n          Hello world\n            </h1>\n            <input placeholder='Enter city' value={city} onChange={onHandleChange} />\n        <button onClick={onHandleSearch}>Search</button>\n          {weather ? (\n        <div style={{margin:'0 auto', background:'grey', width:'150px'}}>\n          <p>{weather.name}</p>\n          <p>{weather.id}</p>\n          <p>{weather.dt}</p>\n          <button onClick={()=>dispatch(addCountry(weather.name))}>add to your countries</button>\n        </div>\n      ) :\n        (<h2>make a search</h2>)}\n      <h3>Your favourites countries</h3>\n      {cities.length > 0 ? (\n        <ul style={{display:'flex', flexWrap:'wrap', margin:'0 auto'}}>\n          {cities.map((c,idx) => (\n            <li style={{ border: '1px solid black',cursor:'pointer' }} key={uuidv4()}><p>{c.name}</p>\n              <p>{console.log('c.id', c.id)}</p>\n                  <p>{c.dt}</p>\n                  <div>\n                      <Link to={`/details/${c.name}`}>Details</Link>\n                  </div>\n                  <button onClick={() => dispatch(removeCountry(c.name))}>remove</button>\n                  <button onClick={() => {\n                      dispatch(updateWeatherAction({ lon: c.coord.lon, lat: c.coord.lat, idx: idx }))\n                  }\n                  }>update</button>\n            </li>))}\n      </ul>\n          ):(<h4>No favourites HERE</h4>)}\n</>)\n}\n"]},"metadata":{},"sourceType":"module"}