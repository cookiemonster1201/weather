{"ast":null,"code":"var _jsxFileName = \"/Users/alenamikituk/Documents/IT/weather/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fetchWeatherAction } from '../redux/slices/weatherSlice';\nimport { getSearchedWeather } from '../redux/weather/weatherSelectors';\nimport { getCountries } from '../redux/countries/countriesSelectors';\nimport { addCountry, removeCountry, updateWeatherAction } from '../redux/slices/countriesSlice';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const searchCountry = useSelector(getSearchedWeather);\n  const countries = useSelector(getCountries);\n  const [city, setCity] = useState('');\n  const [cities, setCities] = useState([]);\n\n  const onHandleChange = e => {\n    setCity(e.target.value);\n  };\n\n  const onHandleSearch = () => {\n    dispatch(fetchWeatherAction(city));\n    setCity('');\n  };\n\n  useEffect(() => {\n    countries === null || countries === void 0 ? void 0 : countries.forEach(country => {\n      axios.get(`/weather?q=${country}&appid=d0aef4da9ac1a34e09e4ce9ff137ae24&units=imperial`).then(_ref => {\n        let {\n          data\n        } = _ref;\n        // const updated = cities.filter(cityObj => cityObj.name === country);\n        // setCities(updated)\n        setCities(pr => {\n          if (pr && pr !== null && pr !== void 0 && pr.find(c => c.name === country)) {\n            return pr;\n          }\n\n          if (pr.find(city)) {\n            return pr.filter(cityObj => cityObj.name === country);\n          }\n\n          return [...pr, data];\n        });\n      });\n    });\n    console.log('effect', cities, countries);\n  }, [countries]);\n  const {\n    weather,\n    loading\n  } = searchCountry;\n  console.log('render');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter city\",\n      value: city,\n      onChange: onHandleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onHandleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '0 auto',\n        background: 'grey',\n        width: '150px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.dt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(addCountry(weather.name)),\n        children: \"add to your countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"make a search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your favourites countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), cities ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: '0 auto'\n      },\n      children: cities.map((c, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          border: '1px solid black',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: c.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 87\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: console.log('c.id', c.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: c.dt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/details/${c.name}`,\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(removeCountry(c.name)),\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(updateWeatherAction({\n            lon: c.coord.lon,\n            lat: c.coord.lat,\n            idx: idx\n          })),\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }, this)]\n      }, uuidv4(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No favourites HERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainPage, \"JUhj468inlpvHtAn75zHcwBLvGc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/alenamikituk/Documents/IT/weather/src/pages/MainPage.js"],"names":["React","useState","useEffect","Link","Route","Routes","useDispatch","useSelector","v4","uuidv4","fetchWeatherAction","getSearchedWeather","getCountries","addCountry","removeCountry","updateWeatherAction","axios","MainPage","dispatch","searchCountry","countries","city","setCity","cities","setCities","onHandleChange","e","target","value","onHandleSearch","forEach","country","get","then","data","pr","find","c","name","filter","cityObj","console","log","weather","loading","margin","background","width","id","dt","display","flexWrap","map","idx","border","cursor","lon","coord","lat"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fetchWeatherAction } from '../redux/slices/weatherSlice';\nimport { getSearchedWeather } from '../redux/weather/weatherSelectors';\nimport { getCountries } from '../redux/countries/countriesSelectors';\nimport { addCountry,removeCountry, updateWeatherAction } from '../redux/slices/countriesSlice';\nimport axios from 'axios';\n\n\nexport default function MainPage() {\n    const dispatch = useDispatch();\n    const searchCountry = useSelector(getSearchedWeather)\n    const countries = useSelector(getCountries);\n    const [city, setCity] = useState('');\n\n    const [cities, setCities] = useState([]);\n\n    const onHandleChange = (e) => {\n      setCity(e.target.value)\n    }\n\n    const onHandleSearch = () => {\n      dispatch(fetchWeatherAction(city))\n      setCity('')\n    }\n\n    useEffect(() => {\n      countries?.forEach((country) => {\n          axios.get(`/weather?q=${country}&appid=d0aef4da9ac1a34e09e4ce9ff137ae24&units=imperial`).then(({data}) => {\n            // const updated = cities.filter(cityObj => cityObj.name === country);\n            // setCities(updated)\n            setCities(pr => {\n              if (pr && pr?.find(c => c.name === country)) {\n                return pr\n              }\n              if (pr.find(city)) {\n                return pr.filter(cityObj => cityObj.name === country)\n              }\n            return [...pr, data]\n          });\n      })\n    })\n    console.log('effect', cities, countries)\n    }, [countries]);\n\n    const { weather, loading } = searchCountry;\n    console.log('render')\n      return (\n          <>\n            <h1>\n          Hello world\n            </h1>\n            <input placeholder='Enter city' value={city} onChange={onHandleChange} />\n        <button onClick={onHandleSearch}>Search</button>\n          {weather ? (\n        <div style={{margin:'0 auto', background:'grey', width:'150px'}}>\n          <p>{weather.name}</p>\n          <p>{weather.id}</p>\n          <p>{weather.dt}</p>\n          <button onClick={()=>dispatch(addCountry(weather.name))}>add to your countries</button>\n        </div>\n      ) :\n        (<h2>make a search</h2>)}\n      <h3>Your favourites countries</h3>\n      {cities ? (\n        <ul style={{display:'flex', flexWrap:'wrap', margin:'0 auto'}}>\n          {cities.map((c,idx) => (\n            <li style={{ border: '1px solid black',cursor:'pointer' }} key={uuidv4()}><p>{c.name}</p>\n              <p>{console.log('c.id', c.id)}</p>\n                  <p>{c.dt}</p>\n                  <div>\n                      <Link to={`/details/${c.name}`}>Details</Link>\n                  </div>\n                  <button onClick={() => dispatch(removeCountry(c.name))}>remove</button>\n                  <button onClick={() => dispatch(updateWeatherAction({ lon: c.coord.lon, lat: c.coord.lat, idx: idx }))\n                  }>update</button>\n            </li>))}\n      </ul>\n          ):(<h4>No favourites HERE</h4>)}\n</>)\n}\n"]},"metadata":{},"sourceType":"module"}